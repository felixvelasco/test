/**
 *
 * $Id$
 */
package xbase.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.xtext.common.types.JvmFormalParameter;

import org.eclipse.xtext.xbase.XExpression;

/**
 * A sample validator interface for {@link org.eclipse.xtext.xbase.XClosure}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface XClosureValidator {
	boolean validate();

	boolean validateDeclaredFormalParameters(EList<JvmFormalParameter> value);
	boolean validateExpression(XExpression value);
	boolean validateExplicitSyntax(boolean value);
	boolean validateImplicitParameter(JvmFormalParameter value);
}
