grammar com.isb.bks.ivr.voice.dsl.VoiceDsl with org.eclipse.xtext.common.Terminals

import "http://www.isb.com/bks/ivr/voice/dsl/VoiceDsl/1.0"

VoiceDsl:
	InputDsl
	| MenuDsl
	| PromptDsl
	| RecordDsl
	| TransferDsl
    ;

PromptDsl:
	'output' name = ID 
       ((configuration = Configuration)? 
	    (conditions += Condition*))
  	     audios=Audios	
;

MenuDsl:
	'menu' name = ID
	   (configuration = Configuration)? 
       ((grammars = Grammars)&
	    (conditions += Condition*))
	     audios=Audios
  	     outputs=Outputs
;

InputDsl:
	'input' name = ID
      (configuration = Configuration) 
 	   ((grammars = Grammars)&
	   (conditions += Condition*))
  	    audios=Audios	
;

RecordDsl:
	'record' name = ID 'filename' fileName = STRING
       (configuration = Configuration)? 
	    conditions += Condition*
  	    audios=Audios	
;

TransferDsl:
	(
	('blindTransfer' name = ID ) |
	('consultationTransfer' name = ID) | 
	('bridgeTransfer' name = ID )
	
	) 
	   (('destination' destination = STRING )&
		('audioTransfer' audioTransfer = STRING )?& 
		('maxTime' maxTime = STRING )?&
		('timeout' timeout = STRING )?)
       (configuration = Configuration)? 
       (conditions += Condition*)?
  	     audios=Audios	
;
	  
Grammars:
	{Grammars}
	'grammars' '{'
	       grammatics += Grammar*
	    '}'
;

Audios: 
	'audios' '{' 
	('main' ':' (
			mainAudios += ConditionalAudio+))? &
	('match' ':' (
			matchAudios += ConditionalAudio+))? &
	('nomatch' ':' (
		    noMatchAudios += ConditionalAudio+))? &
	('noinput' ':' (
		    noInputAudios += ConditionalAudio+))? &
		     
    '}'
;

Configuration:
	{Configuration}
	 '{'
	  configValue += ConfigValue*
	 '}'
;

ConfigValue:
	name = ID value=ConfigValueValue
;

ConfigValueValue:
	INT ('ms'|'s')?| FLOAT | 'true' | 'false' 
;

Grammar:
	mode = ('voice'|'dtmf'|'voicedtmf') expr ?= 'expr'? src = STRING
;

Condition:
	{Condition}
	'condition' name = ID condition = INT 
;

Outputs:
	'options' '{' 
  		  output+=Output+
	 '}'
;

Output:
	 name = ID ':' outputValue+=OutputValue (',' outputValue+=OutputValue)*
;

OutputValue:
	value=STRING | value='*'
;

SimpleAudio returns Audio:
	{Audio}
	'say' (('src' src=STRING)?
		(('wording' tts=STRING ) |
			('as' (interpretation=Interpretation) ('(' format=STRING ')')?  tts=STRING)
		)?
	)
;

enum Interpretation:
	number | boolean | currency | date | digits | phone | time
;

enum TypeTransfer:
	blind | consultation | bridge
;

ConditionalAudio returns Audio:
	{ConditionalAudio}
	'when' '('  condit=STRING ')'  '{' (simpleAudios+=SimpleAudio)+ '}'		                                      
    |SimpleAudio
 ;
 
 terminal FLOAT :
   (INT '.' INT)
;



