/*
* generated by Xtext
*/
package com.isb.bks.ivr.voice.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class VoiceDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class VoiceDslElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VoiceDsl");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInputDslParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMenuDslParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPromptDslParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRecordDslParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTransferDslParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//VoiceDsl:
		//	InputDsl | MenuDsl | PromptDsl | RecordDsl | TransferDsl;
		public ParserRule getRule() { return rule; }

		//InputDsl | MenuDsl | PromptDsl | RecordDsl | TransferDsl
		public Alternatives getAlternatives() { return cAlternatives; }

		//InputDsl
		public RuleCall getInputDslParserRuleCall_0() { return cInputDslParserRuleCall_0; }

		//MenuDsl
		public RuleCall getMenuDslParserRuleCall_1() { return cMenuDslParserRuleCall_1; }

		//PromptDsl
		public RuleCall getPromptDslParserRuleCall_2() { return cPromptDslParserRuleCall_2; }

		//RecordDsl
		public RuleCall getRecordDslParserRuleCall_3() { return cRecordDslParserRuleCall_3; }

		//TransferDsl
		public RuleCall getTransferDslParserRuleCall_4() { return cTransferDslParserRuleCall_4; }
	}

	public class PromptDslElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PromptDsl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOutputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cConfigurationAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cConfigurationOutputConfigurationParserRuleCall_2_0_0 = (RuleCall)cConfigurationAssignment_2_0.eContents().get(0);
		private final Assignment cConditionsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cConditionsConditionParserRuleCall_2_1_0 = (RuleCall)cConditionsAssignment_2_1.eContents().get(0);
		private final Assignment cAudiosAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAudiosAudiosParserRuleCall_3_0 = (RuleCall)cAudiosAssignment_3.eContents().get(0);
		
		//PromptDsl:
		//	"output" name=ID (configuration=OutputConfiguration? conditions+=Condition*) audios=Audios;
		public ParserRule getRule() { return rule; }

		//"output" name=ID (configuration=OutputConfiguration? conditions+=Condition*) audios=Audios
		public Group getGroup() { return cGroup; }

		//"output"
		public Keyword getOutputKeyword_0() { return cOutputKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//configuration=OutputConfiguration? conditions+=Condition*
		public Group getGroup_2() { return cGroup_2; }

		//configuration=OutputConfiguration?
		public Assignment getConfigurationAssignment_2_0() { return cConfigurationAssignment_2_0; }

		//OutputConfiguration
		public RuleCall getConfigurationOutputConfigurationParserRuleCall_2_0_0() { return cConfigurationOutputConfigurationParserRuleCall_2_0_0; }

		//conditions+=Condition*
		public Assignment getConditionsAssignment_2_1() { return cConditionsAssignment_2_1; }

		//Condition
		public RuleCall getConditionsConditionParserRuleCall_2_1_0() { return cConditionsConditionParserRuleCall_2_1_0; }

		//audios=Audios
		public Assignment getAudiosAssignment_3() { return cAudiosAssignment_3; }

		//Audios
		public RuleCall getAudiosAudiosParserRuleCall_3_0() { return cAudiosAudiosParserRuleCall_3_0; }
	}

	public class MenuDslElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MenuDsl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMenuKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cConfigurationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConfigurationInputConfigurationParserRuleCall_2_0 = (RuleCall)cConfigurationAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Assignment cGrammarsAssignment_3_0 = (Assignment)cUnorderedGroup_3.eContents().get(0);
		private final RuleCall cGrammarsGrammarsParserRuleCall_3_0_0 = (RuleCall)cGrammarsAssignment_3_0.eContents().get(0);
		private final Assignment cConditionsAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final RuleCall cConditionsConditionParserRuleCall_3_1_0 = (RuleCall)cConditionsAssignment_3_1.eContents().get(0);
		private final Assignment cAudiosAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAudiosAudiosParserRuleCall_4_0 = (RuleCall)cAudiosAssignment_4.eContents().get(0);
		private final Assignment cOutputsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOutputsOutputsParserRuleCall_5_0 = (RuleCall)cOutputsAssignment_5.eContents().get(0);
		
		//MenuDsl:
		//	"menu" name=ID configuration=InputConfiguration? (grammars=Grammars & conditions+=Condition*) audios=Audios
		//	outputs=Outputs;
		public ParserRule getRule() { return rule; }

		//"menu" name=ID configuration=InputConfiguration? (grammars=Grammars & conditions+=Condition*) audios=Audios
		//outputs=Outputs
		public Group getGroup() { return cGroup; }

		//"menu"
		public Keyword getMenuKeyword_0() { return cMenuKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//configuration=InputConfiguration?
		public Assignment getConfigurationAssignment_2() { return cConfigurationAssignment_2; }

		//InputConfiguration
		public RuleCall getConfigurationInputConfigurationParserRuleCall_2_0() { return cConfigurationInputConfigurationParserRuleCall_2_0; }

		//grammars=Grammars & conditions+=Condition*
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//grammars=Grammars
		public Assignment getGrammarsAssignment_3_0() { return cGrammarsAssignment_3_0; }

		//Grammars
		public RuleCall getGrammarsGrammarsParserRuleCall_3_0_0() { return cGrammarsGrammarsParserRuleCall_3_0_0; }

		//conditions+=Condition*
		public Assignment getConditionsAssignment_3_1() { return cConditionsAssignment_3_1; }

		//Condition
		public RuleCall getConditionsConditionParserRuleCall_3_1_0() { return cConditionsConditionParserRuleCall_3_1_0; }

		//audios=Audios
		public Assignment getAudiosAssignment_4() { return cAudiosAssignment_4; }

		//Audios
		public RuleCall getAudiosAudiosParserRuleCall_4_0() { return cAudiosAudiosParserRuleCall_4_0; }

		//outputs=Outputs
		public Assignment getOutputsAssignment_5() { return cOutputsAssignment_5; }

		//Outputs
		public RuleCall getOutputsOutputsParserRuleCall_5_0() { return cOutputsOutputsParserRuleCall_5_0; }
	}

	public class InputDslElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InputDsl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cConfigurationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConfigurationInputConfigurationParserRuleCall_2_0 = (RuleCall)cConfigurationAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Assignment cGrammarsAssignment_3_0 = (Assignment)cUnorderedGroup_3.eContents().get(0);
		private final RuleCall cGrammarsGrammarsParserRuleCall_3_0_0 = (RuleCall)cGrammarsAssignment_3_0.eContents().get(0);
		private final Assignment cConditionsAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final RuleCall cConditionsConditionParserRuleCall_3_1_0 = (RuleCall)cConditionsAssignment_3_1.eContents().get(0);
		private final Assignment cAudiosAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAudiosAudiosParserRuleCall_4_0 = (RuleCall)cAudiosAssignment_4.eContents().get(0);
		
		//InputDsl:
		//	"input" name=ID configuration=InputConfiguration? (grammars=Grammars & conditions+=Condition*) audios=Audios;
		public ParserRule getRule() { return rule; }

		//"input" name=ID configuration=InputConfiguration? (grammars=Grammars & conditions+=Condition*) audios=Audios
		public Group getGroup() { return cGroup; }

		//"input"
		public Keyword getInputKeyword_0() { return cInputKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//configuration=InputConfiguration?
		public Assignment getConfigurationAssignment_2() { return cConfigurationAssignment_2; }

		//InputConfiguration
		public RuleCall getConfigurationInputConfigurationParserRuleCall_2_0() { return cConfigurationInputConfigurationParserRuleCall_2_0; }

		//grammars=Grammars & conditions+=Condition*
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//grammars=Grammars
		public Assignment getGrammarsAssignment_3_0() { return cGrammarsAssignment_3_0; }

		//Grammars
		public RuleCall getGrammarsGrammarsParserRuleCall_3_0_0() { return cGrammarsGrammarsParserRuleCall_3_0_0; }

		//conditions+=Condition*
		public Assignment getConditionsAssignment_3_1() { return cConditionsAssignment_3_1; }

		//Condition
		public RuleCall getConditionsConditionParserRuleCall_3_1_0() { return cConditionsConditionParserRuleCall_3_1_0; }

		//audios=Audios
		public Assignment getAudiosAssignment_4() { return cAudiosAssignment_4; }

		//Audios
		public RuleCall getAudiosAudiosParserRuleCall_4_0() { return cAudiosAudiosParserRuleCall_4_0; }
	}

	public class RecordDslElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RecordDsl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRecordKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cFilenameKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cFileNameAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cFileNameSTRINGTerminalRuleCall_3_0_1_0 = (RuleCall)cFileNameAssignment_3_0_1.eContents().get(0);
		private final Assignment cConfigurationAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final RuleCall cConfigurationRecordConfigurationParserRuleCall_3_1_0 = (RuleCall)cConfigurationAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cConditionsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cConditionsConditionParserRuleCall_5_0 = (RuleCall)cConditionsAssignment_5.eContents().get(0);
		private final Assignment cAudiosAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAudiosAudiosParserRuleCall_6_0 = (RuleCall)cAudiosAssignment_6.eContents().get(0);
		
		//RecordDsl:
		//	"record" name=ID "{" ("filename" fileName=STRING & configuration=RecordConfiguration?) "}" conditions+=Condition*
		//	audios=Audios;
		public ParserRule getRule() { return rule; }

		//"record" name=ID "{" ("filename" fileName=STRING & configuration=RecordConfiguration?) "}" conditions+=Condition*
		//audios=Audios
		public Group getGroup() { return cGroup; }

		//"record"
		public Keyword getRecordKeyword_0() { return cRecordKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"filename" fileName=STRING & configuration=RecordConfiguration?
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//"filename" fileName=STRING
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"filename"
		public Keyword getFilenameKeyword_3_0_0() { return cFilenameKeyword_3_0_0; }

		//fileName=STRING
		public Assignment getFileNameAssignment_3_0_1() { return cFileNameAssignment_3_0_1; }

		//STRING
		public RuleCall getFileNameSTRINGTerminalRuleCall_3_0_1_0() { return cFileNameSTRINGTerminalRuleCall_3_0_1_0; }

		//configuration=RecordConfiguration?
		public Assignment getConfigurationAssignment_3_1() { return cConfigurationAssignment_3_1; }

		//RecordConfiguration
		public RuleCall getConfigurationRecordConfigurationParserRuleCall_3_1_0() { return cConfigurationRecordConfigurationParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }

		//conditions+=Condition*
		public Assignment getConditionsAssignment_5() { return cConditionsAssignment_5; }

		//Condition
		public RuleCall getConditionsConditionParserRuleCall_5_0() { return cConditionsConditionParserRuleCall_5_0; }

		//audios=Audios
		public Assignment getAudiosAssignment_6() { return cAudiosAssignment_6; }

		//Audios
		public RuleCall getAudiosAudiosParserRuleCall_6_0() { return cAudiosAudiosParserRuleCall_6_0; }
	}

	public class TransferDslElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TransferDsl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTransferDslAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeTransferAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeTransferTypeTransferEnumRuleCall_1_0 = (RuleCall)cTypeTransferAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cDestinationKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Assignment cDestinationAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final RuleCall cDestinationSTRINGTerminalRuleCall_4_0_1_0 = (RuleCall)cDestinationAssignment_4_0_1.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cTransferaudioKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cAudioTransferAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cAudioTransferSTRINGTerminalRuleCall_4_1_1_0 = (RuleCall)cAudioTransferAssignment_4_1_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cMaxtimeKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cMaxTimeAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cMaxTimeConfigValueValueParserRuleCall_4_2_1_0 = (RuleCall)cMaxTimeAssignment_4_2_1.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cTransferTimeoutKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cTimeoutAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cTimeoutConfigValueValueParserRuleCall_4_3_1_0 = (RuleCall)cTimeoutAssignment_4_3_1.eContents().get(0);
		private final Assignment cConfigurationAssignment_4_4 = (Assignment)cUnorderedGroup_4.eContents().get(4);
		private final RuleCall cConfigurationTransferConfigurationParserRuleCall_4_4_0 = (RuleCall)cConfigurationAssignment_4_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cConditionsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cConditionsConditionParserRuleCall_6_0 = (RuleCall)cConditionsAssignment_6.eContents().get(0);
		private final Assignment cAudiosAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAudiosAudiosParserRuleCall_7_0 = (RuleCall)cAudiosAssignment_7.eContents().get(0);
		
		//TransferDsl:
		//	{TransferDsl} typeTransfer=TypeTransfer name=ID "{" ("destination" destination=STRING & ("transferaudio"
		//	audioTransfer=STRING)? & ("maxtime" maxTime=ConfigValueValue)? & ("transferTimeout" timeout=ConfigValueValue)? &
		//	configuration=TransferConfiguration?) "}" conditions+=Condition? audios=Audios;
		public ParserRule getRule() { return rule; }

		//{TransferDsl} typeTransfer=TypeTransfer name=ID "{" ("destination" destination=STRING & ("transferaudio"
		//audioTransfer=STRING)? & ("maxtime" maxTime=ConfigValueValue)? & ("transferTimeout" timeout=ConfigValueValue)? &
		//configuration=TransferConfiguration?) "}" conditions+=Condition? audios=Audios
		public Group getGroup() { return cGroup; }

		//{TransferDsl}
		public Action getTransferDslAction_0() { return cTransferDslAction_0; }

		//typeTransfer=TypeTransfer
		public Assignment getTypeTransferAssignment_1() { return cTypeTransferAssignment_1; }

		//TypeTransfer
		public RuleCall getTypeTransferTypeTransferEnumRuleCall_1_0() { return cTypeTransferTypeTransferEnumRuleCall_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"destination" destination=STRING & ("transferaudio" audioTransfer=STRING)? & ("maxtime" maxTime=ConfigValueValue)? &
		//("transferTimeout" timeout=ConfigValueValue)? & configuration=TransferConfiguration?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//"destination" destination=STRING
		public Group getGroup_4_0() { return cGroup_4_0; }

		//"destination"
		public Keyword getDestinationKeyword_4_0_0() { return cDestinationKeyword_4_0_0; }

		//destination=STRING
		public Assignment getDestinationAssignment_4_0_1() { return cDestinationAssignment_4_0_1; }

		//STRING
		public RuleCall getDestinationSTRINGTerminalRuleCall_4_0_1_0() { return cDestinationSTRINGTerminalRuleCall_4_0_1_0; }

		//("transferaudio" audioTransfer=STRING)?
		public Group getGroup_4_1() { return cGroup_4_1; }

		//"transferaudio"
		public Keyword getTransferaudioKeyword_4_1_0() { return cTransferaudioKeyword_4_1_0; }

		//audioTransfer=STRING
		public Assignment getAudioTransferAssignment_4_1_1() { return cAudioTransferAssignment_4_1_1; }

		//STRING
		public RuleCall getAudioTransferSTRINGTerminalRuleCall_4_1_1_0() { return cAudioTransferSTRINGTerminalRuleCall_4_1_1_0; }

		//("maxtime" maxTime=ConfigValueValue)?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//"maxtime"
		public Keyword getMaxtimeKeyword_4_2_0() { return cMaxtimeKeyword_4_2_0; }

		//maxTime=ConfigValueValue
		public Assignment getMaxTimeAssignment_4_2_1() { return cMaxTimeAssignment_4_2_1; }

		//ConfigValueValue
		public RuleCall getMaxTimeConfigValueValueParserRuleCall_4_2_1_0() { return cMaxTimeConfigValueValueParserRuleCall_4_2_1_0; }

		//("transferTimeout" timeout=ConfigValueValue)?
		public Group getGroup_4_3() { return cGroup_4_3; }

		//"transferTimeout"
		public Keyword getTransferTimeoutKeyword_4_3_0() { return cTransferTimeoutKeyword_4_3_0; }

		//timeout=ConfigValueValue
		public Assignment getTimeoutAssignment_4_3_1() { return cTimeoutAssignment_4_3_1; }

		//ConfigValueValue
		public RuleCall getTimeoutConfigValueValueParserRuleCall_4_3_1_0() { return cTimeoutConfigValueValueParserRuleCall_4_3_1_0; }

		//configuration=TransferConfiguration?
		public Assignment getConfigurationAssignment_4_4() { return cConfigurationAssignment_4_4; }

		//TransferConfiguration
		public RuleCall getConfigurationTransferConfigurationParserRuleCall_4_4_0() { return cConfigurationTransferConfigurationParserRuleCall_4_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//conditions+=Condition?
		public Assignment getConditionsAssignment_6() { return cConditionsAssignment_6; }

		//Condition
		public RuleCall getConditionsConditionParserRuleCall_6_0() { return cConditionsConditionParserRuleCall_6_0; }

		//audios=Audios
		public Assignment getAudiosAssignment_7() { return cAudiosAssignment_7; }

		//Audios
		public RuleCall getAudiosAudiosParserRuleCall_7_0() { return cAudiosAudiosParserRuleCall_7_0; }
	}

	public class GrammarsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Grammars");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGrammarsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGrammarsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cGrammaticsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cGrammaticsGrammarParserRuleCall_3_0 = (RuleCall)cGrammaticsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Grammars:
		//	{Grammars} "grammars" "{" grammatics+=Grammar* "}";
		public ParserRule getRule() { return rule; }

		//{Grammars} "grammars" "{" grammatics+=Grammar* "}"
		public Group getGroup() { return cGroup; }

		//{Grammars}
		public Action getGrammarsAction_0() { return cGrammarsAction_0; }

		//"grammars"
		public Keyword getGrammarsKeyword_1() { return cGrammarsKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//grammatics+=Grammar*
		public Assignment getGrammaticsAssignment_3() { return cGrammaticsAssignment_3; }

		//Grammar
		public RuleCall getGrammaticsGrammarParserRuleCall_3_0() { return cGrammaticsGrammarParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class AudiosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Audios");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAudiosAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAudiosKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cMainKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cColonKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cMainAudiosAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cMainAudiosConditionalAudioParserRuleCall_3_0_2_0 = (RuleCall)cMainAudiosAssignment_3_0_2.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cMatchKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cMatchAudiosAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cMatchAudiosConditionalAudioParserRuleCall_3_1_2_0 = (RuleCall)cMatchAudiosAssignment_3_1_2.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cNomatchKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cColonKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cNoMatchAudiosAssignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cNoMatchAudiosConditionalAudioParserRuleCall_3_2_2_0 = (RuleCall)cNoMatchAudiosAssignment_3_2_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cNoinputKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Keyword cColonKeyword_3_3_1 = (Keyword)cGroup_3_3.eContents().get(1);
		private final Assignment cNoInputAudiosAssignment_3_3_2 = (Assignment)cGroup_3_3.eContents().get(2);
		private final RuleCall cNoInputAudiosConditionalAudioParserRuleCall_3_3_2_0 = (RuleCall)cNoInputAudiosAssignment_3_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Audios:
		//	{Audios} "audios" "{" (("main" ":" mainAudios+=ConditionalAudio+)? & ("match" ":" matchAudios+=ConditionalAudio+)? &
		//	("nomatch" ":" noMatchAudios+=ConditionalAudio+)? & ("noinput" ":" noInputAudios+=ConditionalAudio+)?) "}";
		public ParserRule getRule() { return rule; }

		//{Audios} "audios" "{" (("main" ":" mainAudios+=ConditionalAudio+)? & ("match" ":" matchAudios+=ConditionalAudio+)? &
		//("nomatch" ":" noMatchAudios+=ConditionalAudio+)? & ("noinput" ":" noInputAudios+=ConditionalAudio+)?) "}"
		public Group getGroup() { return cGroup; }

		//{Audios}
		public Action getAudiosAction_0() { return cAudiosAction_0; }

		//"audios"
		public Keyword getAudiosKeyword_1() { return cAudiosKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("main" ":" mainAudios+=ConditionalAudio+)? & ("match" ":" matchAudios+=ConditionalAudio+)? & ("nomatch" ":"
		//noMatchAudios+=ConditionalAudio+)? & ("noinput" ":" noInputAudios+=ConditionalAudio+)?
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//("main" ":" mainAudios+=ConditionalAudio+)?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"main"
		public Keyword getMainKeyword_3_0_0() { return cMainKeyword_3_0_0; }

		//":"
		public Keyword getColonKeyword_3_0_1() { return cColonKeyword_3_0_1; }

		//mainAudios+=ConditionalAudio+
		public Assignment getMainAudiosAssignment_3_0_2() { return cMainAudiosAssignment_3_0_2; }

		//ConditionalAudio
		public RuleCall getMainAudiosConditionalAudioParserRuleCall_3_0_2_0() { return cMainAudiosConditionalAudioParserRuleCall_3_0_2_0; }

		//("match" ":" matchAudios+=ConditionalAudio+)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"match"
		public Keyword getMatchKeyword_3_1_0() { return cMatchKeyword_3_1_0; }

		//":"
		public Keyword getColonKeyword_3_1_1() { return cColonKeyword_3_1_1; }

		//matchAudios+=ConditionalAudio+
		public Assignment getMatchAudiosAssignment_3_1_2() { return cMatchAudiosAssignment_3_1_2; }

		//ConditionalAudio
		public RuleCall getMatchAudiosConditionalAudioParserRuleCall_3_1_2_0() { return cMatchAudiosConditionalAudioParserRuleCall_3_1_2_0; }

		//("nomatch" ":" noMatchAudios+=ConditionalAudio+)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"nomatch"
		public Keyword getNomatchKeyword_3_2_0() { return cNomatchKeyword_3_2_0; }

		//":"
		public Keyword getColonKeyword_3_2_1() { return cColonKeyword_3_2_1; }

		//noMatchAudios+=ConditionalAudio+
		public Assignment getNoMatchAudiosAssignment_3_2_2() { return cNoMatchAudiosAssignment_3_2_2; }

		//ConditionalAudio
		public RuleCall getNoMatchAudiosConditionalAudioParserRuleCall_3_2_2_0() { return cNoMatchAudiosConditionalAudioParserRuleCall_3_2_2_0; }

		//("noinput" ":" noInputAudios+=ConditionalAudio+)?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//"noinput"
		public Keyword getNoinputKeyword_3_3_0() { return cNoinputKeyword_3_3_0; }

		//":"
		public Keyword getColonKeyword_3_3_1() { return cColonKeyword_3_3_1; }

		//noInputAudios+=ConditionalAudio+
		public Assignment getNoInputAudiosAssignment_3_3_2() { return cNoInputAudiosAssignment_3_3_2; }

		//ConditionalAudio
		public RuleCall getNoInputAudiosConditionalAudioParserRuleCall_3_3_2_0() { return cNoInputAudiosConditionalAudioParserRuleCall_3_3_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Configuration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfigurationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cConfigValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConfigValueConfigValueParserRuleCall_2_0 = (RuleCall)cConfigValueAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Configuration:
		//	{Configuration} "{" configValue+=ConfigValue* "}";
		public ParserRule getRule() { return rule; }

		//{Configuration} "{" configValue+=ConfigValue* "}"
		public Group getGroup() { return cGroup; }

		//{Configuration}
		public Action getConfigurationAction_0() { return cConfigurationAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//configValue+=ConfigValue*
		public Assignment getConfigValueAssignment_2() { return cConfigValueAssignment_2; }

		//ConfigValue
		public RuleCall getConfigValueConfigValueParserRuleCall_2_0() { return cConfigValueConfigValueParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class OutputConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OutputConfiguration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfigurationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cConfigValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConfigValueConfigValueParserRuleCall_2_0 = (RuleCall)cConfigValueAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//OutputConfiguration returns Configuration:
		//	{Configuration} "{" configValue+=ConfigValue* "}";
		public ParserRule getRule() { return rule; }

		//{Configuration} "{" configValue+=ConfigValue* "}"
		public Group getGroup() { return cGroup; }

		//{Configuration}
		public Action getConfigurationAction_0() { return cConfigurationAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//configValue+=ConfigValue*
		public Assignment getConfigValueAssignment_2() { return cConfigValueAssignment_2; }

		//ConfigValue
		public RuleCall getConfigValueConfigValueParserRuleCall_2_0() { return cConfigValueConfigValueParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class InputConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InputConfiguration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfigurationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cConfigValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConfigValueConfigValueParserRuleCall_2_0 = (RuleCall)cConfigValueAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//InputConfiguration returns Configuration:
		//	{Configuration} "{" configValue+=ConfigValue* "}";
		public ParserRule getRule() { return rule; }

		//{Configuration} "{" configValue+=ConfigValue* "}"
		public Group getGroup() { return cGroup; }

		//{Configuration}
		public Action getConfigurationAction_0() { return cConfigurationAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//configValue+=ConfigValue*
		public Assignment getConfigValueAssignment_2() { return cConfigValueAssignment_2; }

		//ConfigValue
		public RuleCall getConfigValueConfigValueParserRuleCall_2_0() { return cConfigValueConfigValueParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class RecordConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RecordConfiguration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfigurationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cConfigValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cConfigValueConfigValueParserRuleCall_1_0 = (RuleCall)cConfigValueAssignment_1.eContents().get(0);
		
		//RecordConfiguration returns Configuration:
		//	{Configuration} configValue+=ConfigValue*;
		public ParserRule getRule() { return rule; }

		//{Configuration} configValue+=ConfigValue*
		public Group getGroup() { return cGroup; }

		//{Configuration}
		public Action getConfigurationAction_0() { return cConfigurationAction_0; }

		//configValue+=ConfigValue*
		public Assignment getConfigValueAssignment_1() { return cConfigValueAssignment_1; }

		//ConfigValue
		public RuleCall getConfigValueConfigValueParserRuleCall_1_0() { return cConfigValueConfigValueParserRuleCall_1_0; }
	}

	public class TransferConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TransferConfiguration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfigurationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cConfigValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cConfigValueConfigValueParserRuleCall_1_0 = (RuleCall)cConfigValueAssignment_1.eContents().get(0);
		
		//TransferConfiguration returns Configuration:
		//	{Configuration} configValue+=ConfigValue*;
		public ParserRule getRule() { return rule; }

		//{Configuration} configValue+=ConfigValue*
		public Group getGroup() { return cGroup; }

		//{Configuration}
		public Action getConfigurationAction_0() { return cConfigurationAction_0; }

		//configValue+=ConfigValue*
		public Assignment getConfigValueAssignment_1() { return cConfigValueAssignment_1; }

		//ConfigValue
		public RuleCall getConfigValueConfigValueParserRuleCall_1_0() { return cConfigValueConfigValueParserRuleCall_1_0; }
	}

	public class ConfigValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConfigValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQualifiedNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0_0 = (RuleCall)cValueAssignment_1_0.eContents().get(0);
		private final Assignment cValueAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cValueConfigValueValueParserRuleCall_1_1_0 = (RuleCall)cValueAssignment_1_1.eContents().get(0);
		
		//ConfigValue:
		//	name=QualifiedName (value=STRING | value=ConfigValueValue);
		public ParserRule getRule() { return rule; }

		//name=QualifiedName (value=STRING | value=ConfigValueValue)
		public Group getGroup() { return cGroup; }

		//name=QualifiedName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_0_0() { return cNameQualifiedNameParserRuleCall_0_0; }

		//value=STRING | value=ConfigValueValue
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//value=STRING
		public Assignment getValueAssignment_1_0() { return cValueAssignment_1_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0_0() { return cValueSTRINGTerminalRuleCall_1_0_0; }

		//value=ConfigValueValue
		public Assignment getValueAssignment_1_1() { return cValueAssignment_1_1; }

		//ConfigValueValue
		public RuleCall getValueConfigValueValueParserRuleCall_1_1_0() { return cValueConfigValueValueParserRuleCall_1_1_0; }
	}

	public class ConfigValueValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConfigValueValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Keyword cMsKeyword_0_1_0 = (Keyword)cAlternatives_0_1.eContents().get(0);
		private final Keyword cSKeyword_0_1_1 = (Keyword)cAlternatives_0_1.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cFloatParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Keyword cMsKeyword_1_1_0 = (Keyword)cAlternatives_1_1.eContents().get(0);
		private final Keyword cSKeyword_1_1_1 = (Keyword)cAlternatives_1_1.eContents().get(1);
		private final Keyword cTrueKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cFalseKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//ConfigValueValue:
		//	INT ("ms" | "s")? | Float ("ms" | "s")? | "true" | "false";
		public ParserRule getRule() { return rule; }

		//INT ("ms" | "s")? | Float ("ms" | "s")? | "true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//INT ("ms" | "s")?
		public Group getGroup_0() { return cGroup_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_0_0() { return cINTTerminalRuleCall_0_0; }

		//("ms" | "s")?
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }

		//"ms"
		public Keyword getMsKeyword_0_1_0() { return cMsKeyword_0_1_0; }

		//"s"
		public Keyword getSKeyword_0_1_1() { return cSKeyword_0_1_1; }

		//Float ("ms" | "s")?
		public Group getGroup_1() { return cGroup_1; }

		//Float
		public RuleCall getFloatParserRuleCall_1_0() { return cFloatParserRuleCall_1_0; }

		//("ms" | "s")?
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }

		//"ms"
		public Keyword getMsKeyword_1_1_0() { return cMsKeyword_1_1_0; }

		//"s"
		public Keyword getSKeyword_1_1_1() { return cSKeyword_1_1_1; }

		//"true"
		public Keyword getTrueKeyword_2() { return cTrueKeyword_2; }

		//"false"
		public Keyword getFalseKeyword_3() { return cFalseKeyword_3; }
	}

	public class GrammarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Grammar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cModeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cModeAlternatives_0_0 = (Alternatives)cModeAssignment_0.eContents().get(0);
		private final Keyword cModeVoiceKeyword_0_0_0 = (Keyword)cModeAlternatives_0_0.eContents().get(0);
		private final Keyword cModeDtmfKeyword_0_0_1 = (Keyword)cModeAlternatives_0_0.eContents().get(1);
		private final Keyword cModeVoicedtmfKeyword_0_0_2 = (Keyword)cModeAlternatives_0_0.eContents().get(2);
		private final Assignment cExprAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cExprExprKeyword_1_0 = (Keyword)cExprAssignment_1.eContents().get(0);
		private final Assignment cSrcAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSrcSTRINGTerminalRuleCall_2_0 = (RuleCall)cSrcAssignment_2.eContents().get(0);
		
		//Grammar:
		//	mode=("voice" | "dtmf" | "voicedtmf") expr?="expr"? src=STRING;
		public ParserRule getRule() { return rule; }

		//mode=("voice" | "dtmf" | "voicedtmf") expr?="expr"? src=STRING
		public Group getGroup() { return cGroup; }

		//mode=("voice" | "dtmf" | "voicedtmf")
		public Assignment getModeAssignment_0() { return cModeAssignment_0; }

		//"voice" | "dtmf" | "voicedtmf"
		public Alternatives getModeAlternatives_0_0() { return cModeAlternatives_0_0; }

		//"voice"
		public Keyword getModeVoiceKeyword_0_0_0() { return cModeVoiceKeyword_0_0_0; }

		//"dtmf"
		public Keyword getModeDtmfKeyword_0_0_1() { return cModeDtmfKeyword_0_0_1; }

		//"voicedtmf"
		public Keyword getModeVoicedtmfKeyword_0_0_2() { return cModeVoicedtmfKeyword_0_0_2; }

		//expr?="expr"?
		public Assignment getExprAssignment_1() { return cExprAssignment_1; }

		//"expr"
		public Keyword getExprExprKeyword_1_0() { return cExprExprKeyword_1_0; }

		//src=STRING
		public Assignment getSrcAssignment_2() { return cSrcAssignment_2; }

		//STRING
		public RuleCall getSrcSTRINGTerminalRuleCall_2_0() { return cSrcSTRINGTerminalRuleCall_2_0; }
	}

	public class ConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Condition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConditionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cConditionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConditionINTTerminalRuleCall_3_0 = (RuleCall)cConditionAssignment_3.eContents().get(0);
		
		//Condition:
		//	{Condition} "condition" name=ID condition=INT;
		public ParserRule getRule() { return rule; }

		//{Condition} "condition" name=ID condition=INT
		public Group getGroup() { return cGroup; }

		//{Condition}
		public Action getConditionAction_0() { return cConditionAction_0; }

		//"condition"
		public Keyword getConditionKeyword_1() { return cConditionKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//condition=INT
		public Assignment getConditionAssignment_3() { return cConditionAssignment_3; }

		//INT
		public RuleCall getConditionINTTerminalRuleCall_3_0() { return cConditionINTTerminalRuleCall_3_0; }
	}

	public class OutputsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Outputs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOptionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOutputAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOutputOutputParserRuleCall_2_0 = (RuleCall)cOutputAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Outputs:
		//	"options" "{" output+=Output+ "}";
		public ParserRule getRule() { return rule; }

		//"options" "{" output+=Output+ "}"
		public Group getGroup() { return cGroup; }

		//"options"
		public Keyword getOptionsKeyword_0() { return cOptionsKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//output+=Output+
		public Assignment getOutputAssignment_2() { return cOutputAssignment_2; }

		//Output
		public RuleCall getOutputOutputParserRuleCall_2_0() { return cOutputOutputParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class OutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Output");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOutputValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOutputValueOutputValueParserRuleCall_2_0 = (RuleCall)cOutputValueAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOutputValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOutputValueOutputValueParserRuleCall_3_1_0 = (RuleCall)cOutputValueAssignment_3_1.eContents().get(0);
		
		//Output:
		//	name=ID ":" outputValue+=OutputValue ("," outputValue+=OutputValue)*;
		public ParserRule getRule() { return rule; }

		//name=ID ":" outputValue+=OutputValue ("," outputValue+=OutputValue)*
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//outputValue+=OutputValue
		public Assignment getOutputValueAssignment_2() { return cOutputValueAssignment_2; }

		//OutputValue
		public RuleCall getOutputValueOutputValueParserRuleCall_2_0() { return cOutputValueOutputValueParserRuleCall_2_0; }

		//("," outputValue+=OutputValue)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//outputValue+=OutputValue
		public Assignment getOutputValueAssignment_3_1() { return cOutputValueAssignment_3_1; }

		//OutputValue
		public RuleCall getOutputValueOutputValueParserRuleCall_3_1_0() { return cOutputValueOutputValueParserRuleCall_3_1_0; }
	}

	public class OutputValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OutputValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cValueAsteriskKeyword_1_0 = (Keyword)cValueAssignment_1.eContents().get(0);
		
		//OutputValue:
		//	value=STRING | value="*";
		public ParserRule getRule() { return rule; }

		//value=STRING | value="*"
		public Alternatives getAlternatives() { return cAlternatives; }

		//value=STRING
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0_0() { return cValueSTRINGTerminalRuleCall_0_0; }

		//value="*"
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//"*"
		public Keyword getValueAsteriskKeyword_1_0() { return cValueAsteriskKeyword_1_0; }
	}

	public class SimpleAudioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleAudio");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAudioAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSayKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cGroup_2.eContents().get(0);
		private final Keyword cSrcKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cSrcAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cSrcSTRINGTerminalRuleCall_2_0_1_0 = (RuleCall)cSrcAssignment_2_0_1.eContents().get(0);
		private final Alternatives cAlternatives_2_1 = (Alternatives)cGroup_2.eContents().get(1);
		private final Group cGroup_2_1_0 = (Group)cAlternatives_2_1.eContents().get(0);
		private final Keyword cWordingKeyword_2_1_0_0 = (Keyword)cGroup_2_1_0.eContents().get(0);
		private final Assignment cTtsAssignment_2_1_0_1 = (Assignment)cGroup_2_1_0.eContents().get(1);
		private final RuleCall cTtsSTRINGTerminalRuleCall_2_1_0_1_0 = (RuleCall)cTtsAssignment_2_1_0_1.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cAlternatives_2_1.eContents().get(1);
		private final Keyword cAsKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cInterpretationAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cInterpretationInterpretationEnumRuleCall_2_1_1_1_0 = (RuleCall)cInterpretationAssignment_2_1_1_1.eContents().get(0);
		private final Group cGroup_2_1_1_2 = (Group)cGroup_2_1_1.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_1_1_2_0 = (Keyword)cGroup_2_1_1_2.eContents().get(0);
		private final Assignment cFormatAssignment_2_1_1_2_1 = (Assignment)cGroup_2_1_1_2.eContents().get(1);
		private final RuleCall cFormatSTRINGTerminalRuleCall_2_1_1_2_1_0 = (RuleCall)cFormatAssignment_2_1_1_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_1_1_2_2 = (Keyword)cGroup_2_1_1_2.eContents().get(2);
		private final Assignment cTtsAssignment_2_1_1_3 = (Assignment)cGroup_2_1_1.eContents().get(3);
		private final RuleCall cTtsSTRINGTerminalRuleCall_2_1_1_3_0 = (RuleCall)cTtsAssignment_2_1_1_3.eContents().get(0);
		
		//SimpleAudio returns Audio:
		//	{Audio} "say" (("src" src=STRING)? ("wording" tts=STRING | "as" interpretation=Interpretation ("(" format=STRING ")")?
		//	tts=STRING)?);
		public ParserRule getRule() { return rule; }

		//{Audio} "say" (("src" src=STRING)? ("wording" tts=STRING | "as" interpretation=Interpretation ("(" format=STRING ")")?
		//tts=STRING)?)
		public Group getGroup() { return cGroup; }

		//{Audio}
		public Action getAudioAction_0() { return cAudioAction_0; }

		//"say"
		public Keyword getSayKeyword_1() { return cSayKeyword_1; }

		//("src" src=STRING)? ("wording" tts=STRING | "as" interpretation=Interpretation ("(" format=STRING ")")? tts=STRING)?
		public Group getGroup_2() { return cGroup_2; }

		//("src" src=STRING)?
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"src"
		public Keyword getSrcKeyword_2_0_0() { return cSrcKeyword_2_0_0; }

		//src=STRING
		public Assignment getSrcAssignment_2_0_1() { return cSrcAssignment_2_0_1; }

		//STRING
		public RuleCall getSrcSTRINGTerminalRuleCall_2_0_1_0() { return cSrcSTRINGTerminalRuleCall_2_0_1_0; }

		//("wording" tts=STRING | "as" interpretation=Interpretation ("(" format=STRING ")")? tts=STRING)?
		public Alternatives getAlternatives_2_1() { return cAlternatives_2_1; }

		//"wording" tts=STRING
		public Group getGroup_2_1_0() { return cGroup_2_1_0; }

		//"wording"
		public Keyword getWordingKeyword_2_1_0_0() { return cWordingKeyword_2_1_0_0; }

		//tts=STRING
		public Assignment getTtsAssignment_2_1_0_1() { return cTtsAssignment_2_1_0_1; }

		//STRING
		public RuleCall getTtsSTRINGTerminalRuleCall_2_1_0_1_0() { return cTtsSTRINGTerminalRuleCall_2_1_0_1_0; }

		//"as" interpretation=Interpretation ("(" format=STRING ")")? tts=STRING
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }

		//"as"
		public Keyword getAsKeyword_2_1_1_0() { return cAsKeyword_2_1_1_0; }

		//interpretation=Interpretation
		public Assignment getInterpretationAssignment_2_1_1_1() { return cInterpretationAssignment_2_1_1_1; }

		//Interpretation
		public RuleCall getInterpretationInterpretationEnumRuleCall_2_1_1_1_0() { return cInterpretationInterpretationEnumRuleCall_2_1_1_1_0; }

		//("(" format=STRING ")")?
		public Group getGroup_2_1_1_2() { return cGroup_2_1_1_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_1_1_2_0() { return cLeftParenthesisKeyword_2_1_1_2_0; }

		//format=STRING
		public Assignment getFormatAssignment_2_1_1_2_1() { return cFormatAssignment_2_1_1_2_1; }

		//STRING
		public RuleCall getFormatSTRINGTerminalRuleCall_2_1_1_2_1_0() { return cFormatSTRINGTerminalRuleCall_2_1_1_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_1_1_2_2() { return cRightParenthesisKeyword_2_1_1_2_2; }

		//tts=STRING
		public Assignment getTtsAssignment_2_1_1_3() { return cTtsAssignment_2_1_1_3; }

		//STRING
		public RuleCall getTtsSTRINGTerminalRuleCall_2_1_1_3_0() { return cTtsSTRINGTerminalRuleCall_2_1_1_3_0; }
	}

	public class ConditionalAudioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConditionalAudio");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cConditionalAudioAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cWhenKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cConditAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cConditSTRINGTerminalRuleCall_0_3_0 = (RuleCall)cConditAssignment_0_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Assignment cSimpleAudiosAssignment_0_6 = (Assignment)cGroup_0.eContents().get(6);
		private final RuleCall cSimpleAudiosSimpleAudioParserRuleCall_0_6_0 = (RuleCall)cSimpleAudiosAssignment_0_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_0_7 = (Keyword)cGroup_0.eContents().get(7);
		private final RuleCall cSimpleAudioParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ConditionalAudio returns Audio:
		//	{ConditionalAudio} "when" "(" condit=STRING ")" "{" simpleAudios+=SimpleAudio+ "}" | SimpleAudio;
		public ParserRule getRule() { return rule; }

		//{ConditionalAudio} "when" "(" condit=STRING ")" "{" simpleAudios+=SimpleAudio+ "}" | SimpleAudio
		public Alternatives getAlternatives() { return cAlternatives; }

		//{ConditionalAudio} "when" "(" condit=STRING ")" "{" simpleAudios+=SimpleAudio+ "}"
		public Group getGroup_0() { return cGroup_0; }

		//{ConditionalAudio}
		public Action getConditionalAudioAction_0_0() { return cConditionalAudioAction_0_0; }

		//"when"
		public Keyword getWhenKeyword_0_1() { return cWhenKeyword_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }

		//condit=STRING
		public Assignment getConditAssignment_0_3() { return cConditAssignment_0_3; }

		//STRING
		public RuleCall getConditSTRINGTerminalRuleCall_0_3_0() { return cConditSTRINGTerminalRuleCall_0_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_5() { return cLeftCurlyBracketKeyword_0_5; }

		//simpleAudios+=SimpleAudio+
		public Assignment getSimpleAudiosAssignment_0_6() { return cSimpleAudiosAssignment_0_6; }

		//SimpleAudio
		public RuleCall getSimpleAudiosSimpleAudioParserRuleCall_0_6_0() { return cSimpleAudiosSimpleAudioParserRuleCall_0_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_0_7() { return cRightCurlyBracketKeyword_0_7; }

		//SimpleAudio
		public RuleCall getSimpleAudioParserRuleCall_1() { return cSimpleAudioParserRuleCall_1; }
	}

	public class FloatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Float");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//Float:
		//	INT "." INT;
		public ParserRule getRule() { return rule; }

		//INT "." INT
		public Group getGroup() { return cGroup; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	
	
	public class InterpretationElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Interpretation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNumberEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNumberNumberKeyword_0_0 = (Keyword)cNumberEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBooleanBooleanKeyword_1_0 = (Keyword)cBooleanEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCurrencyEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCurrencyCurrencyKeyword_2_0 = (Keyword)cCurrencyEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDateEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDateDateKeyword_3_0 = (Keyword)cDateEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDigitsEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDigitsDigitsKeyword_4_0 = (Keyword)cDigitsEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cPhoneEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cPhonePhoneKeyword_5_0 = (Keyword)cPhoneEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cTimeEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cTimeTimeKeyword_6_0 = (Keyword)cTimeEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum Interpretation:
		//	number | boolean | currency | date | digits | phone | time;
		public EnumRule getRule() { return rule; }

		//number | boolean | currency | date | digits | phone | time
		public Alternatives getAlternatives() { return cAlternatives; }

		//number
		public EnumLiteralDeclaration getNumberEnumLiteralDeclaration_0() { return cNumberEnumLiteralDeclaration_0; }

		//"number"
		public Keyword getNumberNumberKeyword_0_0() { return cNumberNumberKeyword_0_0; }

		//boolean
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_1() { return cBooleanEnumLiteralDeclaration_1; }

		//"boolean"
		public Keyword getBooleanBooleanKeyword_1_0() { return cBooleanBooleanKeyword_1_0; }

		//currency
		public EnumLiteralDeclaration getCurrencyEnumLiteralDeclaration_2() { return cCurrencyEnumLiteralDeclaration_2; }

		//"currency"
		public Keyword getCurrencyCurrencyKeyword_2_0() { return cCurrencyCurrencyKeyword_2_0; }

		//date
		public EnumLiteralDeclaration getDateEnumLiteralDeclaration_3() { return cDateEnumLiteralDeclaration_3; }

		//"date"
		public Keyword getDateDateKeyword_3_0() { return cDateDateKeyword_3_0; }

		//digits
		public EnumLiteralDeclaration getDigitsEnumLiteralDeclaration_4() { return cDigitsEnumLiteralDeclaration_4; }

		//"digits"
		public Keyword getDigitsDigitsKeyword_4_0() { return cDigitsDigitsKeyword_4_0; }

		//phone
		public EnumLiteralDeclaration getPhoneEnumLiteralDeclaration_5() { return cPhoneEnumLiteralDeclaration_5; }

		//"phone"
		public Keyword getPhonePhoneKeyword_5_0() { return cPhonePhoneKeyword_5_0; }

		//time
		public EnumLiteralDeclaration getTimeEnumLiteralDeclaration_6() { return cTimeEnumLiteralDeclaration_6; }

		//"time"
		public Keyword getTimeTimeKeyword_6_0() { return cTimeTimeKeyword_6_0; }
	}

	public class TypeTransferElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "TypeTransfer");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBlindEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBlindBlindTransferKeyword_0_0 = (Keyword)cBlindEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cConsultationEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cConsultationConsultationTransferKeyword_1_0 = (Keyword)cConsultationEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBridgeEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBridgeBridgeTransferKeyword_2_0 = (Keyword)cBridgeEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TypeTransfer:
		//	blind="blindTransfer" | consultation="consultationTransfer" | bridge="bridgeTransfer";
		public EnumRule getRule() { return rule; }

		//blind="blindTransfer" | consultation="consultationTransfer" | bridge="bridgeTransfer"
		public Alternatives getAlternatives() { return cAlternatives; }

		//blind="blindTransfer"
		public EnumLiteralDeclaration getBlindEnumLiteralDeclaration_0() { return cBlindEnumLiteralDeclaration_0; }

		//"blindTransfer"
		public Keyword getBlindBlindTransferKeyword_0_0() { return cBlindBlindTransferKeyword_0_0; }

		//consultation="consultationTransfer"
		public EnumLiteralDeclaration getConsultationEnumLiteralDeclaration_1() { return cConsultationEnumLiteralDeclaration_1; }

		//"consultationTransfer"
		public Keyword getConsultationConsultationTransferKeyword_1_0() { return cConsultationConsultationTransferKeyword_1_0; }

		//bridge="bridgeTransfer"
		public EnumLiteralDeclaration getBridgeEnumLiteralDeclaration_2() { return cBridgeEnumLiteralDeclaration_2; }

		//"bridgeTransfer"
		public Keyword getBridgeBridgeTransferKeyword_2_0() { return cBridgeBridgeTransferKeyword_2_0; }
	}
	
	private VoiceDslElements pVoiceDsl;
	private PromptDslElements pPromptDsl;
	private MenuDslElements pMenuDsl;
	private InputDslElements pInputDsl;
	private RecordDslElements pRecordDsl;
	private TransferDslElements pTransferDsl;
	private GrammarsElements pGrammars;
	private AudiosElements pAudios;
	private ConfigurationElements pConfiguration;
	private OutputConfigurationElements pOutputConfiguration;
	private InputConfigurationElements pInputConfiguration;
	private RecordConfigurationElements pRecordConfiguration;
	private TransferConfigurationElements pTransferConfiguration;
	private ConfigValueElements pConfigValue;
	private ConfigValueValueElements pConfigValueValue;
	private GrammarElements pGrammar;
	private ConditionElements pCondition;
	private OutputsElements pOutputs;
	private OutputElements pOutput;
	private OutputValueElements pOutputValue;
	private SimpleAudioElements pSimpleAudio;
	private InterpretationElements unknownRuleInterpretation;
	private TypeTransferElements unknownRuleTypeTransfer;
	private ConditionalAudioElements pConditionalAudio;
	private FloatElements pFloat;
	private QualifiedNameElements pQualifiedName;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public VoiceDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.isb.bks.ivr.voice.dsl.VoiceDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//VoiceDsl:
	//	InputDsl | MenuDsl | PromptDsl | RecordDsl | TransferDsl;
	public VoiceDslElements getVoiceDslAccess() {
		return (pVoiceDsl != null) ? pVoiceDsl : (pVoiceDsl = new VoiceDslElements());
	}
	
	public ParserRule getVoiceDslRule() {
		return getVoiceDslAccess().getRule();
	}

	//PromptDsl:
	//	"output" name=ID (configuration=OutputConfiguration? conditions+=Condition*) audios=Audios;
	public PromptDslElements getPromptDslAccess() {
		return (pPromptDsl != null) ? pPromptDsl : (pPromptDsl = new PromptDslElements());
	}
	
	public ParserRule getPromptDslRule() {
		return getPromptDslAccess().getRule();
	}

	//MenuDsl:
	//	"menu" name=ID configuration=InputConfiguration? (grammars=Grammars & conditions+=Condition*) audios=Audios
	//	outputs=Outputs;
	public MenuDslElements getMenuDslAccess() {
		return (pMenuDsl != null) ? pMenuDsl : (pMenuDsl = new MenuDslElements());
	}
	
	public ParserRule getMenuDslRule() {
		return getMenuDslAccess().getRule();
	}

	//InputDsl:
	//	"input" name=ID configuration=InputConfiguration? (grammars=Grammars & conditions+=Condition*) audios=Audios;
	public InputDslElements getInputDslAccess() {
		return (pInputDsl != null) ? pInputDsl : (pInputDsl = new InputDslElements());
	}
	
	public ParserRule getInputDslRule() {
		return getInputDslAccess().getRule();
	}

	//RecordDsl:
	//	"record" name=ID "{" ("filename" fileName=STRING & configuration=RecordConfiguration?) "}" conditions+=Condition*
	//	audios=Audios;
	public RecordDslElements getRecordDslAccess() {
		return (pRecordDsl != null) ? pRecordDsl : (pRecordDsl = new RecordDslElements());
	}
	
	public ParserRule getRecordDslRule() {
		return getRecordDslAccess().getRule();
	}

	//TransferDsl:
	//	{TransferDsl} typeTransfer=TypeTransfer name=ID "{" ("destination" destination=STRING & ("transferaudio"
	//	audioTransfer=STRING)? & ("maxtime" maxTime=ConfigValueValue)? & ("transferTimeout" timeout=ConfigValueValue)? &
	//	configuration=TransferConfiguration?) "}" conditions+=Condition? audios=Audios;
	public TransferDslElements getTransferDslAccess() {
		return (pTransferDsl != null) ? pTransferDsl : (pTransferDsl = new TransferDslElements());
	}
	
	public ParserRule getTransferDslRule() {
		return getTransferDslAccess().getRule();
	}

	//Grammars:
	//	{Grammars} "grammars" "{" grammatics+=Grammar* "}";
	public GrammarsElements getGrammarsAccess() {
		return (pGrammars != null) ? pGrammars : (pGrammars = new GrammarsElements());
	}
	
	public ParserRule getGrammarsRule() {
		return getGrammarsAccess().getRule();
	}

	//Audios:
	//	{Audios} "audios" "{" (("main" ":" mainAudios+=ConditionalAudio+)? & ("match" ":" matchAudios+=ConditionalAudio+)? &
	//	("nomatch" ":" noMatchAudios+=ConditionalAudio+)? & ("noinput" ":" noInputAudios+=ConditionalAudio+)?) "}";
	public AudiosElements getAudiosAccess() {
		return (pAudios != null) ? pAudios : (pAudios = new AudiosElements());
	}
	
	public ParserRule getAudiosRule() {
		return getAudiosAccess().getRule();
	}

	//Configuration:
	//	{Configuration} "{" configValue+=ConfigValue* "}";
	public ConfigurationElements getConfigurationAccess() {
		return (pConfiguration != null) ? pConfiguration : (pConfiguration = new ConfigurationElements());
	}
	
	public ParserRule getConfigurationRule() {
		return getConfigurationAccess().getRule();
	}

	//OutputConfiguration returns Configuration:
	//	{Configuration} "{" configValue+=ConfigValue* "}";
	public OutputConfigurationElements getOutputConfigurationAccess() {
		return (pOutputConfiguration != null) ? pOutputConfiguration : (pOutputConfiguration = new OutputConfigurationElements());
	}
	
	public ParserRule getOutputConfigurationRule() {
		return getOutputConfigurationAccess().getRule();
	}

	//InputConfiguration returns Configuration:
	//	{Configuration} "{" configValue+=ConfigValue* "}";
	public InputConfigurationElements getInputConfigurationAccess() {
		return (pInputConfiguration != null) ? pInputConfiguration : (pInputConfiguration = new InputConfigurationElements());
	}
	
	public ParserRule getInputConfigurationRule() {
		return getInputConfigurationAccess().getRule();
	}

	//RecordConfiguration returns Configuration:
	//	{Configuration} configValue+=ConfigValue*;
	public RecordConfigurationElements getRecordConfigurationAccess() {
		return (pRecordConfiguration != null) ? pRecordConfiguration : (pRecordConfiguration = new RecordConfigurationElements());
	}
	
	public ParserRule getRecordConfigurationRule() {
		return getRecordConfigurationAccess().getRule();
	}

	//TransferConfiguration returns Configuration:
	//	{Configuration} configValue+=ConfigValue*;
	public TransferConfigurationElements getTransferConfigurationAccess() {
		return (pTransferConfiguration != null) ? pTransferConfiguration : (pTransferConfiguration = new TransferConfigurationElements());
	}
	
	public ParserRule getTransferConfigurationRule() {
		return getTransferConfigurationAccess().getRule();
	}

	//ConfigValue:
	//	name=QualifiedName (value=STRING | value=ConfigValueValue);
	public ConfigValueElements getConfigValueAccess() {
		return (pConfigValue != null) ? pConfigValue : (pConfigValue = new ConfigValueElements());
	}
	
	public ParserRule getConfigValueRule() {
		return getConfigValueAccess().getRule();
	}

	//ConfigValueValue:
	//	INT ("ms" | "s")? | Float ("ms" | "s")? | "true" | "false";
	public ConfigValueValueElements getConfigValueValueAccess() {
		return (pConfigValueValue != null) ? pConfigValueValue : (pConfigValueValue = new ConfigValueValueElements());
	}
	
	public ParserRule getConfigValueValueRule() {
		return getConfigValueValueAccess().getRule();
	}

	//Grammar:
	//	mode=("voice" | "dtmf" | "voicedtmf") expr?="expr"? src=STRING;
	public GrammarElements getGrammarAccess() {
		return (pGrammar != null) ? pGrammar : (pGrammar = new GrammarElements());
	}
	
	public ParserRule getGrammarRule() {
		return getGrammarAccess().getRule();
	}

	//Condition:
	//	{Condition} "condition" name=ID condition=INT;
	public ConditionElements getConditionAccess() {
		return (pCondition != null) ? pCondition : (pCondition = new ConditionElements());
	}
	
	public ParserRule getConditionRule() {
		return getConditionAccess().getRule();
	}

	//Outputs:
	//	"options" "{" output+=Output+ "}";
	public OutputsElements getOutputsAccess() {
		return (pOutputs != null) ? pOutputs : (pOutputs = new OutputsElements());
	}
	
	public ParserRule getOutputsRule() {
		return getOutputsAccess().getRule();
	}

	//Output:
	//	name=ID ":" outputValue+=OutputValue ("," outputValue+=OutputValue)*;
	public OutputElements getOutputAccess() {
		return (pOutput != null) ? pOutput : (pOutput = new OutputElements());
	}
	
	public ParserRule getOutputRule() {
		return getOutputAccess().getRule();
	}

	//OutputValue:
	//	value=STRING | value="*";
	public OutputValueElements getOutputValueAccess() {
		return (pOutputValue != null) ? pOutputValue : (pOutputValue = new OutputValueElements());
	}
	
	public ParserRule getOutputValueRule() {
		return getOutputValueAccess().getRule();
	}

	//SimpleAudio returns Audio:
	//	{Audio} "say" (("src" src=STRING)? ("wording" tts=STRING | "as" interpretation=Interpretation ("(" format=STRING ")")?
	//	tts=STRING)?);
	public SimpleAudioElements getSimpleAudioAccess() {
		return (pSimpleAudio != null) ? pSimpleAudio : (pSimpleAudio = new SimpleAudioElements());
	}
	
	public ParserRule getSimpleAudioRule() {
		return getSimpleAudioAccess().getRule();
	}

	//enum Interpretation:
	//	number | boolean | currency | date | digits | phone | time;
	public InterpretationElements getInterpretationAccess() {
		return (unknownRuleInterpretation != null) ? unknownRuleInterpretation : (unknownRuleInterpretation = new InterpretationElements());
	}
	
	public EnumRule getInterpretationRule() {
		return getInterpretationAccess().getRule();
	}

	//enum TypeTransfer:
	//	blind="blindTransfer" | consultation="consultationTransfer" | bridge="bridgeTransfer";
	public TypeTransferElements getTypeTransferAccess() {
		return (unknownRuleTypeTransfer != null) ? unknownRuleTypeTransfer : (unknownRuleTypeTransfer = new TypeTransferElements());
	}
	
	public EnumRule getTypeTransferRule() {
		return getTypeTransferAccess().getRule();
	}

	//ConditionalAudio returns Audio:
	//	{ConditionalAudio} "when" "(" condit=STRING ")" "{" simpleAudios+=SimpleAudio+ "}" | SimpleAudio;
	public ConditionalAudioElements getConditionalAudioAccess() {
		return (pConditionalAudio != null) ? pConditionalAudio : (pConditionalAudio = new ConditionalAudioElements());
	}
	
	public ParserRule getConditionalAudioRule() {
		return getConditionalAudioAccess().getRule();
	}

	//Float:
	//	INT "." INT;
	public FloatElements getFloatAccess() {
		return (pFloat != null) ? pFloat : (pFloat = new FloatElements());
	}
	
	public ParserRule getFloatRule() {
		return getFloatAccess().getRule();
	}

	//QualifiedName:
	//	ID ("." ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return (pQualifiedName != null) ? pQualifiedName : (pQualifiedName = new QualifiedNameElements());
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
