/**
 */
package com.vectorsf.jvoice.prompt.model.voiceDsl.provider;

import com.vectorsf.jvoice.prompt.model.voiceDsl.util.VoiceDslAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class VoiceDslItemProviderAdapterFactory extends VoiceDslAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public VoiceDslItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.VoiceDsl} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VoiceDslItemProvider voiceDslItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.VoiceDsl}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVoiceDslAdapter() {
		if (voiceDslItemProvider == null) {
			voiceDslItemProvider = new VoiceDslItemProvider(this);
		}

		return voiceDslItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Configuration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationItemProvider configurationItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Configuration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationAdapter() {
		if (configurationItemProvider == null) {
			configurationItemProvider = new ConfigurationItemProvider(this);
		}

		return configurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.ConfigValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigValueItemProvider configValueItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.ConfigValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigValueAdapter() {
		if (configValueItemProvider == null) {
			configValueItemProvider = new ConfigValueItemProvider(this);
		}

		return configValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Grammar} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GrammarItemProvider grammarItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Grammar}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGrammarAdapter() {
		if (grammarItemProvider == null) {
			grammarItemProvider = new GrammarItemProvider(this);
		}

		return grammarItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Property} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyItemProvider propertyItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Property}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyAdapter() {
		if (propertyItemProvider == null) {
			propertyItemProvider = new PropertyItemProvider(this);
		}

		return propertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Condition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionItemProvider conditionItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Condition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionAdapter() {
		if (conditionItemProvider == null) {
			conditionItemProvider = new ConditionItemProvider(this);
		}

		return conditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Audios} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AudiosItemProvider audiosItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Audios}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAudiosAdapter() {
		if (audiosItemProvider == null) {
			audiosItemProvider = new AudiosItemProvider(this);
		}

		return audiosItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Audio} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AudioItemProvider audioItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Audio}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAudioAdapter() {
		if (audioItemProvider == null) {
			audioItemProvider = new AudioItemProvider(this);
		}

		return audioItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.ConditionalAudio} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionalAudioItemProvider conditionalAudioItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.ConditionalAudio}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionalAudioAdapter() {
		if (conditionalAudioItemProvider == null) {
			conditionalAudioItemProvider = new ConditionalAudioItemProvider(this);
		}

		return conditionalAudioItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.OutputValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputValueItemProvider outputValueItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.OutputValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputValueAdapter() {
		if (outputValueItemProvider == null) {
			outputValueItemProvider = new OutputValueItemProvider(this);
		}

		return outputValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Outputs} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputsItemProvider outputsItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Outputs}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputsAdapter() {
		if (outputsItemProvider == null) {
			outputsItemProvider = new OutputsItemProvider(this);
		}

		return outputsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Grammars} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GrammarsItemProvider grammarsItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Grammars}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGrammarsAdapter() {
		if (grammarsItemProvider == null) {
			grammarsItemProvider = new GrammarsItemProvider(this);
		}

		return grammarsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Output} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputItemProvider outputItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Output}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputAdapter() {
		if (outputItemProvider == null) {
			outputItemProvider = new OutputItemProvider(this);
		}

		return outputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Variables} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariablesItemProvider variablesItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Variables}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariablesAdapter() {
		if (variablesItemProvider == null) {
			variablesItemProvider = new VariablesItemProvider(this);
		}

		return variablesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Variable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableItemProvider variableItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Variable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableAdapter() {
		if (variableItemProvider == null) {
			variableItemProvider = new VariableItemProvider(this);
		}

		return variableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Type} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeItemProvider typeItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Type}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeAdapter() {
		if (typeItemProvider == null) {
			typeItemProvider = new TypeItemProvider(this);
		}

		return typeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Member} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemberItemProvider memberItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Member}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemberAdapter() {
		if (memberItemProvider == null) {
			memberItemProvider = new MemberItemProvider(this);
		}

		return memberItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Class} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassItemProvider classItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Class}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassAdapter() {
		if (classItemProvider == null) {
			classItemProvider = new ClassItemProvider(this);
		}

		return classItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Field} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FieldItemProvider fieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Field}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFieldAdapter() {
		if (fieldItemProvider == null) {
			fieldItemProvider = new FieldItemProvider(this);
		}

		return fieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Function} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionItemProvider functionItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.Function}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionAdapter() {
		if (functionItemProvider == null) {
			functionItemProvider = new FunctionItemProvider(this);
		}

		return functionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.InputDsl} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputDslItemProvider inputDslItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.InputDsl}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputDslAdapter() {
		if (inputDslItemProvider == null) {
			inputDslItemProvider = new InputDslItemProvider(this);
		}

		return inputDslItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.MenuDsl} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MenuDslItemProvider menuDslItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.MenuDsl}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMenuDslAdapter() {
		if (menuDslItemProvider == null) {
			menuDslItemProvider = new MenuDslItemProvider(this);
		}

		return menuDslItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.vectorsf.jvoice.prompt.model.voiceDsl.PromptDsl} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PromptDslItemProvider promptDslItemProvider;

	/**
	 * This creates an adapter for a {@link com.vectorsf.jvoice.prompt.model.voiceDsl.PromptDsl}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPromptDslAdapter() {
		if (promptDslItemProvider == null) {
			promptDslItemProvider = new PromptDslItemProvider(this);
		}

		return promptDslItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (voiceDslItemProvider != null) voiceDslItemProvider.dispose();
		if (configurationItemProvider != null) configurationItemProvider.dispose();
		if (configValueItemProvider != null) configValueItemProvider.dispose();
		if (grammarItemProvider != null) grammarItemProvider.dispose();
		if (propertyItemProvider != null) propertyItemProvider.dispose();
		if (conditionItemProvider != null) conditionItemProvider.dispose();
		if (audiosItemProvider != null) audiosItemProvider.dispose();
		if (audioItemProvider != null) audioItemProvider.dispose();
		if (conditionalAudioItemProvider != null) conditionalAudioItemProvider.dispose();
		if (outputValueItemProvider != null) outputValueItemProvider.dispose();
		if (outputsItemProvider != null) outputsItemProvider.dispose();
		if (grammarsItemProvider != null) grammarsItemProvider.dispose();
		if (outputItemProvider != null) outputItemProvider.dispose();
		if (variablesItemProvider != null) variablesItemProvider.dispose();
		if (variableItemProvider != null) variableItemProvider.dispose();
		if (typeItemProvider != null) typeItemProvider.dispose();
		if (memberItemProvider != null) memberItemProvider.dispose();
		if (classItemProvider != null) classItemProvider.dispose();
		if (fieldItemProvider != null) fieldItemProvider.dispose();
		if (functionItemProvider != null) functionItemProvider.dispose();
		if (inputDslItemProvider != null) inputDslItemProvider.dispose();
		if (menuDslItemProvider != null) menuDslItemProvider.dispose();
		if (promptDslItemProvider != null) promptDslItemProvider.dispose();
	}

}
